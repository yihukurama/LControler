package com.yihukurama.lcontroler.model.access.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.yihukurama.lcontroler.model.access.greendao.User;
import com.yihukurama.lcontroler.model.access.greendao.Lover;
import com.yihukurama.lcontroler.model.access.greendao.LoveMemory;

import com.yihukurama.lcontroler.model.access.greendao.UserDao;
import com.yihukurama.lcontroler.model.access.greendao.LoverDao;
import com.yihukurama.lcontroler.model.access.greendao.LoveMemoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig loverDaoConfig;
    private final DaoConfig loveMemoryDaoConfig;

    private final UserDao userDao;
    private final LoverDao loverDao;
    private final LoveMemoryDao loveMemoryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        loverDaoConfig = daoConfigMap.get(LoverDao.class).clone();
        loverDaoConfig.initIdentityScope(type);

        loveMemoryDaoConfig = daoConfigMap.get(LoveMemoryDao.class).clone();
        loveMemoryDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        loverDao = new LoverDao(loverDaoConfig, this);
        loveMemoryDao = new LoveMemoryDao(loveMemoryDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Lover.class, loverDao);
        registerDao(LoveMemory.class, loveMemoryDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        loverDaoConfig.getIdentityScope().clear();
        loveMemoryDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public LoverDao getLoverDao() {
        return loverDao;
    }

    public LoveMemoryDao getLoveMemoryDao() {
        return loveMemoryDao;
    }

}
